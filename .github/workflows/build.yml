name: Build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CPM_SOURCE_CACHE: ${{ github.workspace }}/cpm_modules

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - preset: clang-release
            os: ubuntu-latest
          - preset: clang-sanitize
            os: ubuntu-latest
          - preset: gcc-release
            os: ubuntu-latest
          - preset: macos-release
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/noble/ llvm-toolchain-noble-20 main"
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y valgrind g++-14 g++-11 clang-20 clang-tidy-20

    - uses: maxim-lobanov/setup-xcode@v1
      if: matrix.os == 'macos-latest'
      with:
        xcode-version: 'latest'

    # Cache CPM modules
    - uses: actions/cache@v3
      with:
        path: "**/cpm_modules"
        key: ${{ github.workflow }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

    # Cache CMake dependencies
    - uses: actions/cache@v3
      with:
        path: "**/_deps"
        key: ${{ github.workflow }}-cmake-deps-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt') }}

    - name: Configure CMake
      run: cmake --preset=${{ matrix.preset }}

    - name: Build
      run: cmake --build build/${{ matrix.preset }}

    - name: Test
      run: ctest --test-dir build/${{ matrix.preset }} --output-on-failure --no-tests=error

    - name: Valgrind unit tests
      if: matrix.preset == 'clang-release'
      run: valgrind build/clang-release/tests/unit/netlist_unittests
